- BUG: What happens if a json file starts with an array? 
- BUG: What happens in pretty print if we print an array of arrays?
- Okay so JSON is valid if it starts with just an array (square brackets) so no outer object. So we need to have a 
  long think about how to approach that. What if we start with a JSON variable that's just an array, then we add something new to it.
  Will it need to be swapped to an object and move the array across?









- Add in construction using and retrieval into std::map<std::string, typename T>
- What happens in printing and parsing empty arrays or empty objects?
- Add more comments!
- Add in error checking and possibly throw exceptions when parsing hits a snag or invalid JSON syn
- Think about expectations. Do you expect calling 'prettyPrint(data)' will print the data or return a string?
- Get rid of JSON::Object and JSON::Array with initializer_lists
- Solve the problem where JSON::Data data = { {"Test", 5} }; is interpreter as an object and not as an array with a string and an int
- Change int and unsigned int to accept the max values int64_t / uint64_t ? perhaps
- Test JSON With all min and max values for numericals
- Check there's enough array tests
- Check for pass by const ref and pass by value where needed
- Think about aux functions like Data::add() Data::remove()
- Consider the use of iterators